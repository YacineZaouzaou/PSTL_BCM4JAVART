package fr.upmc.pstl.exemples.basic.components;

import java.util.List;
import java.util.Map;
import java.util.concurrent.CompletableFuture;

import fr.upmc.components.annotations.OfferedInterfaces;
import fr.upmc.pstl.AbstractComponentRT;
import fr.upmc.pstl.AbstractTask;
import fr.upmc.pstl.Tasks.Task2;
import fr.upmc.pstl.exemples.basic.interfaces.ProviderI;

@OfferedInterfaces(offered = {ProviderI.class})
public class Provider extends AbstractComponentRT implements ProviderI{

	public Provider(Map<String,Object> vars, List<AbstractTask> tasks) {
		super(vars, tasks);
		super.scheduler(this);
	}

	@Override
	public void task2(Object[] params, CompletableFuture<Object> cf) {
		
		ITask task = new Task2(this, Object[0], cf)
	}
}
