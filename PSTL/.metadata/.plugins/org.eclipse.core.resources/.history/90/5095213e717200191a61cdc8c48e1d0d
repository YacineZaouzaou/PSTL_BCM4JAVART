package fr.upmc.pstl.exemples.basic;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import fr.upmc.components.cvm.AbstractCVM;
import fr.upmc.pstl.AbstractTask;
import fr.upmc.pstl.ComponentRT;
import fr.upmc.pstl.Tasks.Task1;
import fr.upmc.pstl.Tasks.Task2;
import fr.upmc.pstl.Tasks.Task3;
import fr.upmc.pstl.exemples.basic.components.Consumer;
import fr.upmc.pstl.exemples.basic.components.Provider;
import fr.upmc.pstl.exemples.basic.interfaces.ConsumerI;
import fr.upmc.pstl.exemples.basic.interfaces.ProviderI;

public class CVM extends AbstractCVM {
	protected Provider provider;
	protected Consumer consumer;

	public CVM() throws Exception {
		super();
	}
	
<<<<<<< HEAD
	protected ArrayList<AbstractTask> tasksP = new ArrayList<AbstractTask>();
	protected ArrayList<AbstractTask> tasksC = new ArrayList<AbstractTask>();
	protected Map<String,Object> varsP = new HashMap<String,Object>();
	protected Map<String,Object> varsC = new HashMap<String,Object>();
	protected AbstractTask t1 = new Task1(provider,null,null); // Incremente la variable
	protected AbstractTask t2 = new Task2(provider,null,null); // get la variable
	protected AbstractTask t3 = new Task3(consumer,null,null); // appel 
	protected int var1,var2;//,var3,var4;
=======
	protected ComponentRT crt;
	protected ArrayList<AbstractTask> tasks = new ArrayList<>();
	protected ArrayList<Object> vars = new ArrayList<Object>();
	protected AbstractTask t1 = new Task1(crt,null,null); 
	protected AbstractTask t2 = new Task2(crt,null,null);
	protected AbstractTask t3 = new Task3(crt,null,null); 
	protected int var1,var2,var3,var4;
>>>>>>> 21eea389ec9ba7a248f71ea0aabf4e050e002bc1
	
	public static void main(String[] args) throws Exception {
		CVM cvm = new CVM();
		cvm.deploy_and_exec();
	}
	
	public void deploy_and_exec() {
		tasksP.add(t1); tasksP.add(t2); tasksC.add(t3);
		varsP.put("var1",var1); varsC.put("var2",var2); //vars.add(var3); vars.add(var4);
		provider = new Provider(varsP, tasksP);
		consumer = new Consumer(varsC, tasksC);
	}
}
