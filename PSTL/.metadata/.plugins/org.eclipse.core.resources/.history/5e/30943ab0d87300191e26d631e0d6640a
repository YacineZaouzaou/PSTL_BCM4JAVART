package fr.upmc.pstl.exemples.basic.ports;

import java.util.concurrent.CompletableFuture;

import fr.upmc.components.ComponentI;
import fr.upmc.components.ports.AbstractInboundPort;
import fr.upmc.pstl.AbstractComponentRT;
import fr.upmc.pstl.Tasks.Provide;
import fr.upmc.pstl.exemples.basic.interfaces.ProviderI;

public class ProviderInboundPort 
extends AbstractInboundPort 
implements ProviderI {

	public ProviderInboundPort(String uri, ComponentI owner) throws Exception {
		super(uri, ProviderI.class ,owner);
	}

	@Override
	public void provide(Object[] params, CompletableFuture<Object> cf) throws Exception{
		final ProviderI provider = (ProviderI) this.getServiceProviderReference();
		((AbstractComponentRT) provider).addCall(new Provide(provider), params, cf));
		
	}

}
