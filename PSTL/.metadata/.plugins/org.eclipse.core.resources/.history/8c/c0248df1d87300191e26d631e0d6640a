package fr.upmc.pstl.Tasks;
import java.util.concurrent.CompletableFuture;

import fr.upmc.pstl.AbstractTask;
import fr.upmc.pstl.annotations.AccessType;
import fr.upmc.pstl.annotations.AccessedVars;
import fr.upmc.pstl.annotations.TaskAnnotation;
import fr.upmc.pstl.exemples.basic.components.Provider;

@AccessedVars(accessType = { AccessType.READ }, vars = { "var1" })
@TaskAnnotation(timeLimit = 9, wcet = 3)
public class Provide extends AbstractTask {

	public Provide(Provider compRT, Object[] params, CompletableFuture<Object> cf) {
		super(compRT, params, cf);
	}

	@Override
	public void execute()  throws Exception {
		System.out.println("completing the cf");
		int var1 = (int) compRT.getVars().get("var1");
		cf.complete(var1);
	}

}
